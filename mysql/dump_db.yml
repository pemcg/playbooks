---
# Dump a db to a file, save up to 4 versions of that file on the remote system
#   Fetch the file and save it on the local system (Dropbox)
#   Save 2 versions on the local system.
#   Grab the latest version of master from GitHub and save that on Dropbox
- hosts: prod
  gather_facts: False
  tasks:
  - set_fact: mydate="{{lookup('pipe','date +%Y%m%d%H%M%S')}}"

  - debug:
      msg: "Current Date: {{ mydate }}"
    tags: config


  - name: "Dump the {{ secret.db_name }} database to {{ secret.db_name }}_{{ mydate }}.sql"
    mysql_db:
      login_user: "{{ secret.user }}"
      login_password: "{{ secret.password }}"
      login_host: "{{ secret.host }}"
      state: dump
      name: "{{ secret.db_name }}"
      target: "{{ secret.remote_folder }}{{ secret.db_name }}_{{ mydate }}.sql"
    tags:
      mysql

  - name: Only keep the 4 newest database dump files
    raw: "cd {{ secret.remote_folder }} && ls -tp | grep -v '/$' | tail -n +5 | xargs -d '\n' rm --"
    tags: 
      mysql

  - name: Copy back to another server
    raw: "scp -P3422 {{ secret.remote_folder }}{{ secret.db_name }}_{{ mydate }}.sql centuryd@staging.floridaroadtesting.com:{{ secret.local_folder_combined }}"

    #- synchronize:
    #-   mode: push
    #-   src: "{{ secret.remote_folder }}{{ secret.db_name }}_{{ mydate }}.sql"
    #-   dest: "rsync://{{secret.hostname}}{{ secret.local_folder_combined }}"
    #-   dest_port: 3422
    #- tags: mysql



- hosts: staging
  gather_facts: True
  tasks:
  - set_fact: mydate="{{hostvars['107.170.125.164']['mydate']}}"

  - name: Only keep the 2 newest files on Dropbox
    raw: "cd {{ secret.local_folder_combined }} && ls -tp | grep -v '/$' | tail -n +3 | xargs -d '\n' rm --"
    tags:
      mysql

  - name: Clone the master branch to Dropbox
    git: 
      repo: "{{ secret.git_repo }}"
      dest: "{{ secret.git_local_folder }}onramp_git" 
      accept_hostkey: "yes"
      force: "yes"
      recursive: "no"
      version: "master"
    tags:
      git
